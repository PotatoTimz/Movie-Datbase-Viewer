{"ast":null,"code":"export default {\n  name: \"RatingsPage\",\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      personID: this.id,\n      biography: \"\",\n      birthday: \"\",\n      name: \"\",\n      place_of_birth: \"\",\n      profile_path: \"\"\n    };\n  },\n  async mounted() {\n    console.log(this.personID);\n    const res = await fetch(\"https://api.themoviedb.org/3/person/\" + this.personID + \"?api_key=b9dfda1d995db256a3b3ae948d044866\");\n    const personInfo = await res.json();\n    this.biography = personInfo.biography;\n    this.birthday = personInfo.birthday;\n    this.name = personInfo.name;\n    this.place_of_birth = personInfo.place_of_birth;\n    this.profile_path = \"https://image.tmdb.org/t/p/original/\" + personInfo.profile_path;\n    console.log(personInfo);\n    console.log(personInfo.place_of_birth);\n    if (personInfo.name === \"\") {\n      this.name = \"There is no available information for this field.\";\n    }\n    if (personInfo.biography === \"\") {\n      this.biography = \"There is no available information for this field.\";\n    }\n    if (personInfo.birthday === null) {\n      this.birthday = \"There is no available information for this field.\";\n    }\n    if (personInfo.place_of_birth === null) {\n      this.place_of_birth = \"There is no available information for this field.\";\n    }\n    if (personInfo.profile_path === null) {\n      console.log(\"No profile picture\");\n      this.profile_path = \"silhouette.png\";\n    }\n  } //end async fetch\n};","map":{"version":3,"names":["name","props","id","String","data","personID","biography","birthday","place_of_birth","profile_path","mounted","console","log","res","fetch","personInfo","json"],"sources":["C:\\Users\\User\\Desktop\\WebDevelopmentGroupProject-master\\src\\components\\RatingsPage.vue"],"sourcesContent":["<template>\n    <section id=\"Ratings\">\n      <section class = \"hero is-dark\">\n      <div id =\"info\">\n    <h1 class = \"title\">Information on the personnel</h1>\n   \n        <div class=\"column is-3\">\n                  <img v-bind:src=\"profile_path\">\n              </div>\n        <p><strong>Name: </strong>{{ name }}</p>\n        <p><strong>Biography: </strong>{{ biography }}</p>\n        <p><strong>Birthday: </strong>{{ birthday }}</p>\n        <p><strong>Birthplace: </strong>{{ place_of_birth }}</p>\n\n      </div>\n</section>\n    </section>\n  </template>\n\n<script>\n\n\n export default {\n  name: \"RatingsPage\",\n  props: {\n      id: String\n    },\n  data(){\n    return{\n    personID: this.id,\n    biography: \"\",\n    birthday: \"\",\n    name: \"\",\n    place_of_birth: \"\",\n    profile_path: \"\",\n    \n\n\n    }\n  },\n  async mounted(){\n    console.log(this.personID)\n    const res = await fetch(\"https://api.themoviedb.org/3/person/\"+this.personID+\"?api_key=b9dfda1d995db256a3b3ae948d044866\")\n    const personInfo = await res.json();\n    this.biography = personInfo.biography;\n    this.birthday= personInfo.birthday;\n    this.name= personInfo.name;\n    this.place_of_birth = personInfo.place_of_birth;\n    this.profile_path = \"https://image.tmdb.org/t/p/original/\" + personInfo.profile_path\n    console.log(personInfo)\n    console.log(personInfo.place_of_birth)\n\n  \n    if (personInfo.name===\"\"){\n      this.name = \"There is no available information for this field.\"\n\n    }\n\n    if (personInfo.biography===\"\"){\n      this.biography = \"There is no available information for this field.\"\n    }\n    if (personInfo.birthday===null){\n      this.birthday = \"There is no available information for this field.\"\n    }\n    if (personInfo.place_of_birth===null){\n      this.place_of_birth = \"There is no available information for this field.\"\n    }\n\n    if (personInfo.profile_path===null){\n      console.log(\"No profile picture\")\n      this.profile_path = \"silhouette.png\";\n    }\n    \n\n  \n  \n  \n  \n\n }//end async fetch\n\n\n \n }\n \n</script>\n\n"],"mappings":"AAsBC,eAAe;EACdA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACHC,EAAE,EAAEC;EACN,CAAC;EACHC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACNC,QAAQ,EAAE,IAAI,CAACH,EAAE;MACjBI,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZP,IAAI,EAAE,EAAE;MACRQ,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAId;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAE;IACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,QAAQ;IACzB,MAAMQ,GAAE,GAAI,MAAMC,KAAK,CAAC,sCAAsC,GAAC,IAAI,CAACT,QAAQ,GAAC,2CAA2C;IACxH,MAAMU,UAAS,GAAI,MAAMF,GAAG,CAACG,IAAI,EAAE;IACnC,IAAI,CAACV,SAAQ,GAAIS,UAAU,CAACT,SAAS;IACrC,IAAI,CAACC,QAAQ,GAAEQ,UAAU,CAACR,QAAQ;IAClC,IAAI,CAACP,IAAI,GAAEe,UAAU,CAACf,IAAI;IAC1B,IAAI,CAACQ,cAAa,GAAIO,UAAU,CAACP,cAAc;IAC/C,IAAI,CAACC,YAAW,GAAI,sCAAqC,GAAIM,UAAU,CAACN,YAAW;IACnFE,OAAO,CAACC,GAAG,CAACG,UAAU;IACtBJ,OAAO,CAACC,GAAG,CAACG,UAAU,CAACP,cAAc;IAGrC,IAAIO,UAAU,CAACf,IAAI,KAAG,EAAE,EAAC;MACvB,IAAI,CAACA,IAAG,GAAI,mDAAkD;IAEhE;IAEA,IAAIe,UAAU,CAACT,SAAS,KAAG,EAAE,EAAC;MAC5B,IAAI,CAACA,SAAQ,GAAI,mDAAkD;IACrE;IACA,IAAIS,UAAU,CAACR,QAAQ,KAAG,IAAI,EAAC;MAC7B,IAAI,CAACA,QAAO,GAAI,mDAAkD;IACpE;IACA,IAAIQ,UAAU,CAACP,cAAc,KAAG,IAAI,EAAC;MACnC,IAAI,CAACA,cAAa,GAAI,mDAAkD;IAC1E;IAEA,IAAIO,UAAU,CAACN,YAAY,KAAG,IAAI,EAAC;MACjCE,OAAO,CAACC,GAAG,CAAC,oBAAoB;MAChC,IAAI,CAACH,YAAW,GAAI,gBAAgB;IACtC;EAQH,CAAC;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}