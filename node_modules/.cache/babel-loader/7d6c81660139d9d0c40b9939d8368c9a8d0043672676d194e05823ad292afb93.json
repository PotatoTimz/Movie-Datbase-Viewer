{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport $ from \"jquery\";\nexport default {\n  name: \"GenresPage\",\n  data() {\n    return {\n      genreList: [],\n      currentGenreName: \"None\",\n      currentGenreID: 0,\n      showResults: false,\n      foundMovies: [],\n      foundMovies2: [],\n      page: '1',\n      numPages: 0,\n      pages: [1, 2, 3, 4, 5]\n    };\n  },\n  async mounted() {\n    const res2 = await fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US\");\n    const genreInfo = await res2.json();\n    this.genreList = genreInfo.genres;\n  },\n  methods: {\n    loadPage(newPage) {\n      if (newPage === this.page) return;\n      if (newPage < 4) this.pages = [1, 2, 3, 4, this.numPages];else if (newPage > this.numPages - 3) this.pages = [1, this.numPages - 3, this.numPages - 2, this.numPages - 1, this.numPages];else this.pages = [1, newPage - 1, newPage, Number(newPage) + 1, this.numPages];\n      this.page = newPage;\n      this.loadRelatedMovies();\n      window.scrollTo(0, 0);\n    },\n    updateSelectedPage() {\n      $('.selected-page').removeClass('selected-page').addClass('is-clickable');\n      let cells = $('#page-selector').children();\n      for (let i = 0; i < cells.length; i++) {\n        let cell = $(cells[i]);\n        if (parseInt(cell.html()) == this.page) {\n          cell.removeClass('is-clickable').addClass('selected-page');\n          break;\n        }\n      }\n    },\n    buttonSelectGenre() {\n      this.currentGenreName = $(\"#location\").val();\n      let genreInfo = this.genreList.filter(genre => genre.name === this.currentGenreName);\n      this.currentGenreID = genreInfo[0].id;\n      this.loadRelatedMovies();\n      this.showResults = true;\n      this.page = 1;\n    },\n    moreInfo(movieID) {\n      this.$emit(\"selected\", movieID);\n    },\n    async loadRelatedMovies() {\n      fetch(\"https://api.themoviedb.org/3/discover/movie?\" + \"api_key=b9dfda1d995db256a3b3ae948d044866\" + `&with_genres=${this.currentGenreID}` + `&page=${this.page}`).then(resp => resp.json()).then(data => this.displayMovies(data)).then(() => this.updateSelectedPage()).catch(error => console.log(error));\n    },\n    displayMovies(data) {\n      this.foundMovies = [];\n      this.foundMovies2 = [];\n      this.numPages = Math.min(500, data.total_pages);\n      this.pages[4] = this.numPages;\n      for (let i = 0; i < 10; i++) {\n        this.foundMovies.push({\n          id: data.results[i].id,\n          title: data.results[i].title,\n          language: data.results[i].original_language,\n          description: data.results[i].overview,\n          genre_id: data.results[i].genre_ids,\n          genreList: [],\n          releaseDate: data.results[i].release_date,\n          score: data.results[i].vote_average,\n          popularity: data.results[i].popularity,\n          poster: \"https://image.tmdb.org/t/p/original/\" + data.results[i].poster_path\n        });\n        for (let j = 0; j < this.foundMovies[i].genre_id.length; j++) {\n          let genreName = this.genreList.filter(genre => this.foundMovies[i].genre_id[j] === genre.id);\n          if (j == this.foundMovies[i].genre_id.length - 1) {\n            this.foundMovies[i].genreList += genreName[0].name;\n          } else {\n            this.foundMovies[i].genreList += genreName[0].name + \", \";\n          }\n        }\n      }\n      for (let i = 10; i < 20; i++) {\n        this.foundMovies2.push({\n          id: data.results[i].id,\n          title: data.results[i].title,\n          language: data.results[i].original_language,\n          description: data.results[i].overview,\n          genre_id: data.results[i].genre_ids,\n          genreList: [],\n          releaseDate: data.results[i].release_date,\n          score: data.results[i].vote_average,\n          popularity: data.results[i].popularity,\n          poster: \"https://image.tmdb.org/t/p/original/\" + data.results[i].poster_path\n        });\n        for (let j = 0; j < this.foundMovies2[i - 10].genre_id.length; j++) {\n          let genreName = this.genreList.filter(genre => this.foundMovies2[i - 10].genre_id[j] === genre.id);\n          if (j == this.foundMovies2[i - 10].genre_id.length - 1) {\n            this.foundMovies2[i - 10].genreList += genreName[0].name;\n          } else {\n            this.foundMovies2[i - 10].genreList += genreName[0].name + \", \";\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["$","name","data","genreList","currentGenreName","currentGenreID","showResults","foundMovies","foundMovies2","page","numPages","pages","mounted","res2","fetch","genreInfo","json","genres","methods","loadPage","newPage","Number","loadRelatedMovies","window","scrollTo","updateSelectedPage","removeClass","addClass","cells","children","i","length","cell","parseInt","html","buttonSelectGenre","val","filter","genre","id","moreInfo","movieID","$emit","then","resp","displayMovies","catch","error","console","log","Math","min","total_pages","push","results","title","language","original_language","description","overview","genre_id","genre_ids","releaseDate","release_date","score","vote_average","popularity","poster","poster_path","j","genreName"],"sources":["C:\\Users\\User\\Desktop\\WebDevelopmentGroupProject-master\\src\\components\\Genre.vue"],"sourcesContent":["<template>\n  <section id=\"UpcomingMovie\">\n    <section>\n      <div id=\"underline\">\n        <strong id=\"UpcomingTitle\">Discover Movies by Genre</strong>\n        <div><strong>Currently Searching: </strong> {{ currentGenreName }}</div>\n        <div class=\"field is-horizontal\" id=\"SelectGenre\">\n          <div class=\"field-label\">\n            <label class=\"label\">Genres:</label>\n          </div>\n          <div class=\"field-body\">\n            <div class=\"field\">\n              <div class=\"control\">\n                <div class=\"select\">\n                  <select id=\"location\">\n                    <option\n                      v-for=\"(genre, index) in genreList\"\n                      v-bind:key=\"index\"\n                    >\n                      {{ genre.name }}\n                    </option>\n                  </select>\n                </div>\n              </div>\n              <br />\n              <button\n                id=\"confirmGenre\"\n                v-on:click=\"buttonSelectGenre()\"\n                class=\"button is-danger\"\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section v-if=\"showResults\" id=\"MovieInfoUpcoming\">\n      <div class=\"columns\">\n        <div class=\"column is-half\">\n          <div\n            v-for=\"(movie, index) in foundMovies\"\n            v-bind:key=\"index\"\n            id=\"UpcomingDivider\"\n          >\n            <div id=\"TitleCutOff\">\n              <strong class=\"movieTitle is-clickable\" v-on:click=\"moreInfo(movie.id)\">{{\n                movie.title\n              }}</strong>\n              <p>{{ movie.releaseDate }}&emsp;|&emsp;{{ movie.language }}</p>\n            </div>\n            <div class=\"columns\" id=\"MovieDisplay\">\n              <div class=\"column is-5\" id=\"testBorder\">\n                <img\n                  id=\"upcomingPoster\"\n                  class=\"is-clickable\"\n                  v-on:click=\"moreInfo(movie.id)\"\n                  v-bind:src=\"movie.poster\"\n                />\n              </div>\n\n              <div class=\"column is-half\">\n                <div><strong>Description: </strong>{{ movie.description }}</div>\n                <div><strong>Genres: </strong> {{ movie.genreList }}</div>\n                <div><strong>Score: </strong>{{ movie.score }}</div>\n                <div><strong>Trend Rating: </strong>{{ movie.popularity }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"column is-half\">\n          <div\n            v-for=\"(movie, index) in foundMovies2\"\n            v-bind:key=\"index\"\n            id=\"UpcomingDivider\"\n          >\n            <div id=\"TitleCutOff\">\n              <strong class=\"movieTitle is-clickable\" v-on:click=\"moreInfo(movie.id)\">{{\n                movie.title\n              }}</strong>\n              <p>{{ movie.releaseDate }}&emsp;|&emsp;{{ movie.language }}</p>\n            </div>\n\n            <div class=\"columns\" id=\"MovieDisplay\">\n              <div class=\"column is-5\">\n                <img\n                  id=\"upcomingPoster\"\n                  class=\"is-clickable\"\n                  v-on:click=\"moreInfo(movie.id)\"\n                  v-bind:src=\"movie.poster\"\n                />\n              </div>\n\n              <div class=\"column is-half\">\n                <div><strong>Description: </strong>{{ movie.description }}</div>\n                <div><strong>Genres: </strong> {{ movie.genreList }}</div>\n                <div><strong>Score: </strong>{{ movie.score }}</div>\n                <div><strong>Trend Rating: </strong>{{ movie.popularity }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <table id=\"page-selector\" class=\"table\">\n        <td v-if=\"numPages > 0\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[0] }}</td>\n        <td v-if=\"page > 3\" class=\"is-unselectable\">...</td>\n        <td v-if=\"numPages > 1\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[1] }}</td>\n        <td v-if=\"numPages > 2\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[2] }}</td>\n        <td v-if=\"numPages > 3\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[3] }}</td>\n        <td v-if=\"page < numPages-2\" class=\"is-unselectable\">...</td>\n        <td v-if=\"numPages > 4\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[4] }}</td>\n    </table> \n  </section>\n</template>\n\n\n<script>\nimport $ from \"jquery\";\n\nexport default {\n  name: \"GenresPage\",\n  data() {\n    return {\n      genreList: [],\n      currentGenreName: \"None\",\n      currentGenreID: 0,\n      showResults: false,\n      foundMovies: [],\n      foundMovies2: [],\n      page: '1',\n      numPages: 0,\n      pages: [1, 2, 3, 4, 5]\n    };\n  },\n  async mounted() {\n    const res2 = await fetch(\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US\"\n    );\n    const genreInfo = await res2.json();\n    this.genreList = genreInfo.genres;\n  },\n  methods: {\n    loadPage(newPage) {\n        if(newPage === this.page)\n            return;\n\n        if(newPage < 4)\n            this.pages = [1, 2, 3, 4, this.numPages];\n        else if(newPage > this.numPages-3)\n            this.pages = [1, this.numPages-3, this.numPages-2, this.numPages-1, this.numPages]\n        else\n            this.pages = [1, newPage-1, newPage, Number(newPage)+1, this.numPages];\n\n        this.page = newPage;\n        this.loadRelatedMovies();\n        window.scrollTo(0, 0);\n    },\n\n    updateSelectedPage() {\n        $('.selected-page').removeClass('selected-page').addClass('is-clickable');\n\n        let cells = $('#page-selector').children();\n        for(let i=0; i<cells.length; i++) {\n            let cell = $(cells[i]);\n            if(parseInt(cell.html()) == this.page) {\n                cell.removeClass('is-clickable').addClass('selected-page');\n                break;\n            }\n        }\n    },\n\n    buttonSelectGenre() {\n      this.currentGenreName = $(\"#location\").val();\n      let genreInfo = this.genreList.filter(\n        (genre) => genre.name === this.currentGenreName\n      );\n      this.currentGenreID = genreInfo[0].id;\n      this.loadRelatedMovies();\n      this.showResults = true;\n      this.page = 1;\n    },\n\n    moreInfo(movieID) {\n      this.$emit(\"selected\", movieID);\n    },\n\n    async loadRelatedMovies() {\n      fetch(\"https://api.themoviedb.org/3/discover/movie?\" +\n            \"api_key=b9dfda1d995db256a3b3ae948d044866\" +\n            `&with_genres=${this.currentGenreID}` +\n            `&page=${this.page}`)\n        .then ((resp)  => resp.json())\n        .then ((data)  => this.displayMovies(data))\n        .then (()      => this.updateSelectedPage())\n        .catch((error) => console.log(error)\n      );\n    },\n\n    displayMovies(data) {\n      this.foundMovies = [];\n      this.foundMovies2 = [];\n      this.numPages = Math.min(500, data.total_pages);\n      this.pages[4] = this.numPages;\n\n      for (let i = 0; i < 10; i++) {\n        this.foundMovies.push({\n          id: data.results[i].id,\n          title: data.results[i].title,\n          language: data.results[i].original_language,\n          description: data.results[i].overview,\n          genre_id: data.results[i].genre_ids,\n          genreList: [],\n          releaseDate: data.results[i].release_date,\n          score: data.results[i].vote_average,\n          popularity: data.results[i].popularity,\n          poster:\n            \"https://image.tmdb.org/t/p/original/\" +\n            data.results[i].poster_path,\n        });\n\n        for (let j = 0; j < this.foundMovies[i].genre_id.length; j++) {\n          let genreName = this.genreList.filter(\n            (genre) => this.foundMovies[i].genre_id[j] === genre.id\n          );\n\n          if (j == this.foundMovies[i].genre_id.length - 1) {\n            this.foundMovies[i].genreList += genreName[0].name;\n          } else {\n            this.foundMovies[i].genreList += genreName[0].name + \", \";\n          }\n        }\n      }\n\n      for (let i = 10; i < 20; i++) {\n        this.foundMovies2.push({\n          id: data.results[i].id,\n          title: data.results[i].title,\n          language: data.results[i].original_language,\n          description: data.results[i].overview,\n          genre_id: data.results[i].genre_ids,\n          genreList: [],\n          releaseDate: data.results[i].release_date,\n          score: data.results[i].vote_average,\n          popularity: data.results[i].popularity,\n          poster:\n            \"https://image.tmdb.org/t/p/original/\" +\n            data.results[i].poster_path,\n        });\n\n        for (let j = 0; j < this.foundMovies2[i - 10].genre_id.length; j++) {\n          let genreName = this.genreList.filter(\n            (genre) => this.foundMovies2[i - 10].genre_id[j] === genre.id\n          );\n\n          if (j == this.foundMovies2[i - 10].genre_id.length - 1) {\n            this.foundMovies2[i - 10].genreList += genreName[0].name;\n          } else {\n            this.foundMovies2[i - 10].genreList += genreName[0].name + \", \";\n          }\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style>\n#SelectGenre {\n  margin-top: 20px;\n  margin-left: -205px;\n  margin-bottom: 20px;\n}\n\ntable tr td {\n  padding: 10px;\n  border: 2px solid black;\n}\n\ntd:hover {\n  background-color: #f2f2f2;\n}\n\n#page-selector {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.selected-page {\n  font-weight: bold;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}