{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"NowPlaying\",\n  data() {\n    return {\n      startingDate: 0,\n      endingDate: 0,\n      upcomingMovies: [],\n      upcomingMovies2: [],\n      genreList: []\n    };\n  },\n  async mounted() {\n    const res2 = await fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US\");\n    const genreInfo = await res2.json();\n    this.genreList = genreInfo;\n    const res = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US&page=1\");\n    const upcomingInfo = await res.json();\n    this.startingDate = upcomingInfo.dates.minimum;\n    this.endingDate = upcomingInfo.dates.maximum;\n    for (let i = 0; i < 5; i++) {\n      this.upcomingMovies.push({\n        id: upcomingInfo.results[i].id,\n        title: upcomingInfo.results[i].title,\n        language: upcomingInfo.results[i].original_language,\n        description: upcomingInfo.results[i].overview,\n        genre_id: upcomingInfo.results[i].genre_ids,\n        genreList: [],\n        releaseDate: upcomingInfo.results[i].release_date,\n        score: upcomingInfo.results[i].vote_average,\n        popularity: upcomingInfo.results[i].popularity,\n        poster: \"https://image.tmdb.org/t/p/original/\" + upcomingInfo.results[i].poster_path\n      });\n      for (let j = 0; j < this.upcomingMovies[i].genre_id.length; j++) {\n        let genreName = this.genreList.genres.filter(genre => this.upcomingMovies[i].genre_id[j] === genre.id);\n        if (j == this.upcomingMovies[i].genre_id.length - 1) {\n          this.upcomingMovies[i].genreList += genreName[0].name;\n        } else {\n          this.upcomingMovies[i].genreList += genreName[0].name + \", \";\n        }\n      }\n    }\n    for (let i = 5; i < 10; i++) {\n      this.upcomingMovies2.push({\n        id: upcomingInfo.results[i].id,\n        title: upcomingInfo.results[i].title,\n        language: upcomingInfo.results[i].original_language,\n        description: upcomingInfo.results[i].overview,\n        genre_id: upcomingInfo.results[i].genre_ids,\n        genreList: [],\n        releaseDate: upcomingInfo.results[i].release_date,\n        score: upcomingInfo.results[i].vote_average,\n        popularity: upcomingInfo.results[i].popularity,\n        poster: \"https://image.tmdb.org/t/p/original/\" + upcomingInfo.results[i].poster_path\n      });\n      for (let j = 0; j < this.upcomingMovies2[i - 5].genre_id.length; j++) {\n        let genreName = this.genreList.genres.filter(genre => this.upcomingMovies2[i - 5].genre_id[j] === genre.id);\n        if (j == this.upcomingMovies2[i - 5].genre_id.length - 1) {\n          this.upcomingMovies2[i - 5].genreList += genreName[0].name;\n        } else {\n          this.upcomingMovies2[i - 5].genreList += genreName[0].name + \", \";\n        }\n      }\n    }\n  },\n  methods: {\n    moreInfo(movieID) {\n      this.$emit(\"selected\", movieID);\n    }\n  }\n};","map":{"version":3,"names":["name","data","startingDate","endingDate","upcomingMovies","upcomingMovies2","genreList","mounted","res2","fetch","genreInfo","json","res","upcomingInfo","dates","minimum","maximum","i","push","id","results","title","language","original_language","description","overview","genre_id","genre_ids","releaseDate","release_date","score","vote_average","popularity","poster","poster_path","j","length","genreName","genres","filter","genre","methods","moreInfo","movieID","$emit"],"sources":["C:\\Users\\User\\Desktop\\WebDevelopmentGroupProject-master\\src\\components\\NowPlaying.vue"],"sourcesContent":["<template>\n    <div id=\"UpcomingMovie\">\n        <div id=\"underline\">\n            <strong id=\"UpcomingTitle\">In Cinemas Now</strong>\n            <div>Loading movies from {{ startingDate }} - {{ endingDate }}</div>\n        </div>\n\n        <section id=\"MovieInfoUpcoming\">\n            <div class=\"columns\">\n\n                <div class=\"column is-half\">\n                    <div v-for=\"(movie, index) in upcomingMovies\" v-bind:key=\"index\"  id=\"UpcomingDivider\">\n                        <div id=\"TitleCutOff\">\n                            <strong class=\"movieTitle is-clickable\" v-on:click=\"moreInfo(movie.id)\">{{ movie.title }}</strong>\n                            <p>{{ movie.releaseDate }} | {{ movie.language }}</p>\n                        </div>\n                        <div class=\"columns\" id=\"MovieDisplay\">\n\n                            <div class=\"column is-5\" id=\"testBorder\">\n                                <img id=\"upcomingPoster\" class=\"is-clickable\" v-on:click=\"moreInfo(movie.id)\" v-bind:src=\"movie.poster\">\n                            </div>\n\n                            <div class=\"column is-half\">\n                                <div><strong>Description: </strong>{{ movie.description }}</div>\n                                <div><strong>Genres: </strong> {{ movie.genreList }}</div>\n                                <div><strong>Score: </strong>{{ movie.score }}</div>\n                                <div><strong>Trend Rating: </strong>{{ movie.popularity }}</div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"column is-half\">\n                    <div v-for=\"(movie, index) in upcomingMovies2\" v-bind:key=\"index\"  id=\"UpcomingDivider\">\n                        \n                        <div id=\"TitleCutOff\">\n                            <strong class=\"movieTitle is-clickable\"  v-on:click=\"moreInfo(movie.id)\">{{ movie.title }}</strong>\n                            <p>{{ movie.releaseDate }} | {{ movie.language }}</p>\n                        </div>\n\n                        <div class=\"columns\" id=\"MovieDisplay\">\n\n                            <div class=\"column is-5\">\n                                <img id=\"upcomingPoster\" class=\"is-clickable\" v-on:click=\"moreInfo(movie.id)\" v-bind:src=\"movie.poster\">\n                            </div>\n\n                            <div class=\"column is-half\">\n                                <div><strong>Description: </strong>{{ movie.description }}</div>\n                                <div><strong>Genres: </strong> {{ movie.genreList }}</div>\n                                <div><strong>Score: </strong>{{ movie.score }}</div>\n                                <div><strong>Trend Rating: </strong>{{ movie.popularity }}</div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </section>\n    </div>\n\n\n     \n</template>\n\n<script>\n    export default {\n        name: \"NowPlaying\",\n        data(){\n            return{\n                startingDate: 0,\n                endingDate: 0,\n                upcomingMovies: [],\n                upcomingMovies2: [],\n                genreList: []\n            }\n        },\n        async mounted(){\n            const res2 = await fetch(\"https://api.themoviedb.org/3/genre/movie/list?api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US\");\n            const genreInfo = await res2.json();\n            this.genreList = genreInfo;\n\n            const res = await fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US&page=1\");\n            const upcomingInfo = await res.json();\n            this.startingDate = upcomingInfo.dates.minimum;\n            this.endingDate = upcomingInfo.dates.maximum;\n\n            for(let i = 0; i < 5; i++){\n                this.upcomingMovies.push({id: upcomingInfo.results[i].id, title: upcomingInfo.results[i].title, language: upcomingInfo.results[i].original_language, description: upcomingInfo.results[i].overview, genre_id: upcomingInfo.results[i].genre_ids, genreList: [], releaseDate: upcomingInfo.results[i].release_date, score: upcomingInfo.results[i].vote_average, popularity: upcomingInfo.results[i].popularity, poster: \"https://image.tmdb.org/t/p/original/\"+upcomingInfo.results[i].poster_path});\n\n                for(let j = 0; j < this.upcomingMovies[i].genre_id.length; j++){\n                    let genreName = this.genreList.genres.filter(genre => (this.upcomingMovies[i].genre_id[j] === genre.id));\n\n                    if(j == this.upcomingMovies[i].genre_id.length-1){\n                        this.upcomingMovies[i].genreList += genreName[0].name;\n                    }\n                    else{\n                        this.upcomingMovies[i].genreList += genreName[0].name+\", \";\n                    }\n                }\n            }\n\n            for(let i = 5; i < 10; i++){\n                this.upcomingMovies2.push({id: upcomingInfo.results[i].id, title: upcomingInfo.results[i].title, language: upcomingInfo.results[i].original_language, description: upcomingInfo.results[i].overview, genre_id: upcomingInfo.results[i].genre_ids, genreList: [], releaseDate: upcomingInfo.results[i].release_date, score: upcomingInfo.results[i].vote_average, popularity: upcomingInfo.results[i].popularity, poster: \"https://image.tmdb.org/t/p/original/\"+upcomingInfo.results[i].poster_path});\n                \n                for(let j = 0; j < this.upcomingMovies2[i-5].genre_id.length; j++){\n                    let genreName = this.genreList.genres.filter(genre => (this.upcomingMovies2[i-5].genre_id[j] === genre.id));\n                    if(j == this.upcomingMovies2[i-5].genre_id.length-1){\n                        this.upcomingMovies2[i-5].genreList += genreName[0].name;\n                    }\n                    else{\n                        this.upcomingMovies2[i-5].genreList += genreName[0].name+\", \";\n                    }\n                }\n            }\n        },\n        methods: {\n            moreInfo(movieID){\n                this.$emit(\"selected\", movieID);\n            }\n        }\n    }\n    \n\n</script>\n\n<style>\n\n    #UpcomingTitle{\n        font-size: 50px;\n    }\n\n    #UpcomingMovie{\n        margin: 4rem;\n    }\n\n    #underline{\n        border-bottom:3px solid black;\n    }\n\n    #MovieInfoUpcoming{\n        margin-top: 30px;\n    }\n\n    .movieTitle{\n        font-size:20px;\n    }\n\n    .movieTitle:hover{\n        color: lightblue;\n    }\n\n    #MovieDisplay{\n        margin-top: 10px;\n    }\n\n    #upcomingPoster{\n        width: 275px;\n        height: 400px;\n    }\n\n    #upcomingPoster:hover{\n        border: 4px solid white;\n    }\n\n    #TitleCutOff{\n        border-bottom:1px solid grey;\n        margin-right: 20px;\n    }\n\n    #UpcomingDivider{\n        height: 525px;\n    }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}