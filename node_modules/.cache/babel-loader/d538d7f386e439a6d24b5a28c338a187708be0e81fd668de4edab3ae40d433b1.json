{"ast":null,"code":"let reccomended = [{\n  \"id\": 8844,\n  \"pictures\": [1, 2, 5, 6]\n}, {\n  \"id\": 4233,\n  \"pictures\": [3, 23, 18, 22]\n}, {\n  \"id\": 603692,\n  \"pictures\": [3, 11, 5, 10]\n}, {\n  \"id\": 299536,\n  \"pictures\": [39, 44, 6, 43]\n}, {\n  \"id\": 585,\n  \"pictures\": [4, 12, 6, 18]\n}, {\n  \"id\": 4935,\n  \"pictures\": [4, 5, 6, 11]\n}, {\n  \"id\": 694,\n  \"pictures\": [4, 11, 12, 13]\n}, {\n  \"id\": 19995,\n  \"pictures\": [4, 5, 6, 10]\n}, {\n  \"id\": 1891,\n  \"pictures\": [7, 18, 33, 44]\n}, {\n  \"id\": 857,\n  \"pictures\": [24, 25, 26, 23]\n}];\nexport default {\n  name: 'ReccomendedPage',\n  props: {\n    id: Number,\n    left: Boolean\n  },\n  data() {\n    return {\n      title: \"\",\n      date: \"\",\n      language: \"\",\n      runtime: \"\",\n      company: \"\",\n      genre: \"\",\n      description: \"\",\n      director: \"\",\n      writer: \"\",\n      star: \"\",\n      score: \"\",\n      poster: \"\",\n      image1: \"\",\n      image2: \"\",\n      image3: \"\",\n      image4: \"\",\n      movieID: reccomended[this.id].id\n    };\n  },\n  async mounted() {\n    //Get Overall Data from the API\n    const res = await fetch(\"https://api.themoviedb.org/3/movie/\" + this.movieID + \"?api_key=b9dfda1d995db256a3b3ae948d044866\");\n    const movieInfo = await res.json();\n    this.title = movieInfo.title;\n    this.date = movieInfo.release_date;\n    this.language = movieInfo.original_language.toUpperCase();\n    this.runtime = movieInfo.runtime;\n    this.company = movieInfo.production_companies[0].name;\n    for (let i = 0; i < movieInfo.genres.length; i++) {\n      if (i != movieInfo.genres.length - 1) {\n        this.genre += movieInfo.genres[i].name + \", \";\n      } else {\n        this.genre += movieInfo.genres[i].name;\n      }\n    }\n    this.description = movieInfo.overview;\n    this.score = movieInfo.vote_average;\n    this.poster = \"https://image.tmdb.org/t/p/original/\" + movieInfo.poster_path;\n    const res2 = await fetch(\"https://api.themoviedb.org/3/movie/\" + this.movieID + \"/credits?api_key=b9dfda1d995db256a3b3ae948d044866\");\n    const castCrew = await res2.json();\n    let directors = castCrew.crew.filter(crew => crew.job == \"Director\");\n    let writers = castCrew.crew.filter(crew => crew.job == \"Screenplay\");\n    for (let i = 0; i < directors.length; i++) {\n      if (i != directors.length - 1) {\n        this.director += directors[i].name + \", \";\n      } else {\n        this.director += directors[i].name;\n      }\n    }\n    for (let i = 0; i < writers.length; i++) {\n      if (i != writers.length - 1) {\n        this.writer += writers[i].name + \", \";\n      } else {\n        this.writer += writers[i].name;\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      if (i != 3) {\n        this.star += castCrew.cast[i].name + \", \";\n      } else {\n        this.star += castCrew.cast[i].name;\n      }\n    }\n    const res3 = await fetch(\"https://api.themoviedb.org/3/movie/\" + this.movieID + \"/images?api_key=b9dfda1d995db256a3b3ae948d044866\");\n    const images = await res3.json();\n    this.image1 = \"https://image.tmdb.org/t/p/original/\" + images.backdrops[reccomended[this.id].pictures[0]].file_path;\n    this.image2 = \"https://image.tmdb.org/t/p/original/\" + images.backdrops[reccomended[this.id].pictures[1]].file_path;\n    this.image3 = \"https://image.tmdb.org/t/p/original/\" + images.backdrops[reccomended[this.id].pictures[2]].file_path;\n    this.image4 = \"https://image.tmdb.org/t/p/original/\" + images.backdrops[reccomended[this.id].pictures[3]].file_path;\n  },\n  methods: {\n    round(value) {\n      return Math.round(value * 10) / 10;\n    },\n    moreInfo() {\n      console.log(this.movieID);\n      this.$emit(\"selected\", this.movieID);\n    }\n  }\n};","map":{"version":3,"names":["reccomended","name","props","id","Number","left","Boolean","data","title","date","language","runtime","company","genre","description","director","writer","star","score","poster","image1","image2","image3","image4","movieID","mounted","res","fetch","movieInfo","json","release_date","original_language","toUpperCase","production_companies","i","genres","length","overview","vote_average","poster_path","res2","castCrew","directors","crew","filter","job","writers","cast","res3","images","backdrops","pictures","file_path","methods","round","value","Math","moreInfo","console","log","$emit"],"sources":["C:\\Users\\User\\Desktop\\WebDevelopmentGroupProject-master\\src\\components\\ReccomendedPage.vue"],"sourcesContent":["<template>\n  <div v-if=\"left\">\n    <section class = \"hero is-dark\">\n        <div class=\"columns\">\n          <div class=\"column is-4 recTextLeft \" id=\"rec1info\">\n              <h1 id=\"title\" class=\"is-clickable\" v-on:click=\"moreInfo()\">{{ title }}</h1>\n              <p id=\"info\">{{ date }} &emsp;|&emsp; {{ language }} &emsp;|&emsp; {{ runtime }} &emsp;|&emsp; {{ company }}</p>\n              <p><strong>Genre:</strong> {{ genre }}</p>\n              <br>\n              <p>{{ description }}</p>\n              <br>\n              <p><strong>Director:</strong> {{ director }}</p>\n              <p><strong>Writer:</strong> {{ writer }}</p>\n              <p><strong>Staring:</strong> {{ star }}</p>\n              <br>\n\n              <div class=\"field is-horizontal\" id=\"ratebars\">\n                    <div class=\"field-label\">\n                        <label><strong>Score</strong></label>\n                    </div>\n                    <div class=\"field-body\">\n                        <div class=\"field\">\n                          <svg height=\"35\" width=\"400\">\n                            <rect y=\"0\" v-bind:width=\"score/10*400\" height=\"35\" fill=\"green\"/>\n                            <text y=\"25\" x =\"10\" fill=\"white\">{{ score }}</text>\n                          </svg>\n                        </div>\n                    </div>\n                </div> \n\n          </div>\n\n          <div class=\"column is-3\" id=\"rec1poster\">\n              <img id=\"recposter\" class=\"is-clickable\" v-bind:src=\"poster\" v-on:click=\"moreInfo()\">\n          </div>\n\n          <div class=\"column\" id=\"rec1photos\">\n              <img id=\"photo\" v-bind:src=\"image1\">\n              <img id=\"photo\" v-bind:src=\"image2\">\n              <img id=\"photo\" v-bind:src=\"image3\">\n              <img id=\"photo\" v-bind:src=\"image4\">\n          </div>\n        </div>\n    </section>\n  </div>\n  <div v-else>\n      <section class = \"hero\">\n        <div class=\"columns\">\n            <div class=\"column is-3\" id=\"rec2poster\">\n                <img id=\"recposter\" class=\"is-clickable\" v-bind:src=\"poster\" v-on:click=\"moreInfo()\">\n            </div>\n\n            <div class=\"column is-5\" id=\"rec2photos\">\n                <img id=\"photo\" v-bind:src=\"image1\">\n                <img id=\"photo\" v-bind:src=\"image2\">\n                <img id=\"photo\" v-bind:src=\"image3\">\n                <img id=\"photo\" v-bind:src=\"image4\">\n            </div>\n\n            <div class=\"column  is-4 recTextRight\" id=\"rec2info\">\n                <h1 id=\"title\" class=\"is-clickable\" v-on:click=\"moreInfo()\">{{ title }}</h1>\n                <p id=\"info\">{{ date }} &emsp;|&emsp; {{ language }} &emsp;|&emsp; {{ runtime }} &emsp;|&emsp; {{ company }}</p>\n                <p><strong>Genre:</strong> {{ genre }}</p>\n                <br>\n                <p>{{ description }}</p>\n                <br>\n                <p><strong>Director:</strong> {{ director }}</p>\n                <p><strong>Writer:</strong> {{ writer }}</p>\n                <p><strong>Staring:</strong> {{ star }}</p>\n                <br>\n                \n                <div class=\"field is-horizontal\" id=\"ratebars2\">\n                    <div class=\"field-label\">\n                        <label><strong>Score:</strong></label>\n                    </div>\n                    <div class=\"field-body\">\n                        <div class=\"field\">\n                          <svg height=\"35\" width=\"400\">\n                            <rect v-bind:width=\"score/10*400\" height=\"35\" fill=\"green\"/>\n                            <text y=\"25\" x =\"10\" fill=\"white\">{{ score }}</text>\n                          </svg>\n                        </div>\n                    </div>\n                </div> \n            </div>\n\n        </div>\n      </section>\n  </div>\n\n</template>\n\n<script>\n  let reccomended = [\n      {\"id\": 8844, \"pictures\": [1,2, 5, 6]},\n      {\"id\": 4233, \"pictures\": [3,23, 18, 22]},\n      {\"id\": 603692, \"pictures\": [3,11, 5, 10]},\n      {\"id\": 299536, \"pictures\": [39, 44, 6, 43]},\n      {\"id\": 585, \"pictures\": [4,12, 6, 18]},\n      {\"id\": 4935, \"pictures\": [4, 5, 6, 11]},\n      {\"id\": 694, \"pictures\": [4,11, 12, 13]},\n      {\"id\": 19995, \"pictures\": [4, 5, 6, 10]}, \n      {\"id\": 1891, \"pictures\": [7, 18, 33, 44]},\n      {\"id\": 857, \"pictures\": [24, 25, 26, 23]}\n  ];\n\n  export default {\n    \n    name: 'ReccomendedPage',\n    props: {\n      id: Number,\n      left: Boolean\n    },\n    data() {\n      return {\n        title: \"\",\n        date: \"\",\n        language: \"\",\n        runtime: \"\",\n        company : \"\",\n        genre : \"\",\n        description : \"\",\n        director : \"\",\n        writer : \"\",\n        star : \"\",\n        score : \"\",\n        poster : \"\",\n        image1 : \"\",\n        image2 : \"\",\n        image3 : \"\",\n        image4 : \"\",\n        movieID : reccomended[this.id].id,\n      }\n    }, \n    async mounted(){\n      //Get Overall Data from the API\n      const res = await fetch(\"https://api.themoviedb.org/3/movie/\"+this.movieID+\"?api_key=b9dfda1d995db256a3b3ae948d044866\");\n      const movieInfo = await res.json();\n      this.title = movieInfo.title;\n      this.date = movieInfo.release_date;\n      this.language = movieInfo.original_language.toUpperCase();\n      this.runtime = movieInfo.runtime;\n      this.company = movieInfo.production_companies[0].name;\n      for(let i = 0; i < movieInfo.genres.length; i++){\n          if(i != movieInfo.genres.length-1){\n              this.genre += movieInfo.genres[i].name +\", \";\n          }\n          else{\n              this.genre += movieInfo.genres[i].name;\n          }\n      }\n      this.description = movieInfo.overview;\n      this.score = movieInfo.vote_average;\n      this.poster = \"https://image.tmdb.org/t/p/original/\"+movieInfo.poster_path;\n\n      const res2 = await fetch(\"https://api.themoviedb.org/3/movie/\"+this.movieID+\"/credits?api_key=b9dfda1d995db256a3b3ae948d044866\");\n      const castCrew = await res2.json();\n      let directors = castCrew.crew.filter(crew => crew.job == \"Director\");\n      let writers = castCrew.crew.filter(crew => crew.job == \"Screenplay\");\n      for(let i = 0; i < directors.length; i++){\n          if(i != directors.length-1){\n              this.director += directors[i].name +\", \";\n          }\n          else{\n              this.director += directors[i].name;\n          }\n      }\n      for(let i = 0; i < writers.length; i++){\n          if(i != writers.length-1){\n              this.writer += writers[i].name +\", \";\n          }\n          else{\n              this.writer += writers[i].name;\n          }\n      }\n      for(let i = 0; i < 4; i++){\n          if(i != 3){\n              this.star += castCrew.cast[i].name +\", \";\n          }\n          else{\n              this.star += castCrew.cast[i].name;\n          }\n      }\n      \n      const res3 = await fetch(\"https://api.themoviedb.org/3/movie/\"+this.movieID+\"/images?api_key=b9dfda1d995db256a3b3ae948d044866\");\n      const images = await res3.json();\n      this.image1 = \"https://image.tmdb.org/t/p/original/\"+images.backdrops[reccomended[this.id].pictures[0]].file_path;\n      this.image2 = \"https://image.tmdb.org/t/p/original/\"+images.backdrops[reccomended[this.id].pictures[1]].file_path;\n      this.image3 = \"https://image.tmdb.org/t/p/original/\"+images.backdrops[reccomended[this.id].pictures[2]].file_path;\n      this.image4 = \"https://image.tmdb.org/t/p/original/\"+images.backdrops[reccomended[this.id].pictures[3]].file_path;\n    },\n    methods: {\n      round(value){\n        return Math.round(value *10) /10;\n      },\n      moreInfo(){\n        console.log(this.movieID);\n        this.$emit(\"selected\", this.movieID);\n      }\n    }\n\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n  #recposter{\n      margin-top: 20px;\n      margin-left: 20px;\n      margin-bottom: 20px;\n      width: 300px;\n      height: 450px;\n  }\n\n  .recTextLeft{\n    padding-left: 30px;\n    margin: 1rem;\n  }\n\n  .recTextRight{\n    margin: 1rem;\n  }\n\n  #title{\n    font-size: 50px;\n  }\n\n  #score{\n    font-size: 25px;\n  }\n\n  #photo{\n    margin-top: 20px;\n    margin-right: 20px;\n    margin-bottom: 10px;\n    height: 200px;\n    width: 240px;\n  }\n\n  #title:hover{\n    color: lightblue;\n  }\n\n  #ratebars{\n    margin-left: -40px;\n  }\n\n  #ratebars2{\n    margin-left: -50px;\n  }\n\n  #recposter:hover{\n    border: 1px solid white;\n  }\n\n  #rec2photos{\n    width: 550px;\n  }\n</style>\n"],"mappings":"AA6FE,IAAIA,WAAU,GAAI,CACd;EAAC,IAAI,EAAE,IAAI;EAAE,UAAU,EAAE,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAAC,CAAC,EACrC;EAAC,IAAI,EAAE,IAAI;EAAE,UAAU,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE;AAAC,CAAC,EACxC;EAAC,IAAI,EAAE,MAAM;EAAE,UAAU,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AAAC,CAAC,EACzC;EAAC,IAAI,EAAE,MAAM;EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;AAAC,CAAC,EAC3C;EAAC,IAAI,EAAE,GAAG;EAAE,UAAU,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,CAAC,EAAE,EAAE;AAAC,CAAC,EACtC;EAAC,IAAI,EAAE,IAAI;EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AAAC,CAAC,EACvC;EAAC,IAAI,EAAE,GAAG;EAAE,UAAU,EAAE,CAAC,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,EAAE;AAAC,CAAC,EACvC;EAAC,IAAI,EAAE,KAAK;EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AAAC,CAAC,EACxC;EAAC,IAAI,EAAE,IAAI;EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAAC,CAAC,EACzC;EAAC,IAAI,EAAE,GAAG;EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAAC,EAC3C;AAED,eAAe;EAEbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,EAAE,EAAEC,MAAM;IACVC,IAAI,EAAEC;EACR,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,OAAM,EAAI,EAAE;MACZC,KAAI,EAAI,EAAE;MACVC,WAAU,EAAI,EAAE;MAChBC,QAAO,EAAI,EAAE;MACbC,MAAK,EAAI,EAAE;MACXC,IAAG,EAAI,EAAE;MACTC,KAAI,EAAI,EAAE;MACVC,MAAK,EAAI,EAAE;MACXC,MAAK,EAAI,EAAE;MACXC,MAAK,EAAI,EAAE;MACXC,MAAK,EAAI,EAAE;MACXC,MAAK,EAAI,EAAE;MACXC,OAAM,EAAIxB,WAAW,CAAC,IAAI,CAACG,EAAE,CAAC,CAACA;IACjC;EACF,CAAC;EACD,MAAMsB,OAAOA,CAAA,EAAE;IACb;IACA,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,qCAAqC,GAAC,IAAI,CAACH,OAAO,GAAC,2CAA2C,CAAC;IACvH,MAAMI,SAAQ,GAAI,MAAMF,GAAG,CAACG,IAAI,EAAE;IAClC,IAAI,CAACrB,KAAI,GAAIoB,SAAS,CAACpB,KAAK;IAC5B,IAAI,CAACC,IAAG,GAAImB,SAAS,CAACE,YAAY;IAClC,IAAI,CAACpB,QAAO,GAAIkB,SAAS,CAACG,iBAAiB,CAACC,WAAW,EAAE;IACzD,IAAI,CAACrB,OAAM,GAAIiB,SAAS,CAACjB,OAAO;IAChC,IAAI,CAACC,OAAM,GAAIgB,SAAS,CAACK,oBAAoB,CAAC,CAAC,CAAC,CAAChC,IAAI;IACrD,KAAI,IAAIiC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIN,SAAS,CAACO,MAAM,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAC;MAC5C,IAAGA,CAAA,IAAKN,SAAS,CAACO,MAAM,CAACC,MAAM,GAAC,CAAC,EAAC;QAC9B,IAAI,CAACvB,KAAI,IAAKe,SAAS,CAACO,MAAM,CAACD,CAAC,CAAC,CAACjC,IAAG,GAAG,IAAI;MAChD,OACI;QACA,IAAI,CAACY,KAAI,IAAKe,SAAS,CAACO,MAAM,CAACD,CAAC,CAAC,CAACjC,IAAI;MAC1C;IACJ;IACA,IAAI,CAACa,WAAU,GAAIc,SAAS,CAACS,QAAQ;IACrC,IAAI,CAACnB,KAAI,GAAIU,SAAS,CAACU,YAAY;IACnC,IAAI,CAACnB,MAAK,GAAI,sCAAsC,GAACS,SAAS,CAACW,WAAW;IAE1E,MAAMC,IAAG,GAAI,MAAMb,KAAK,CAAC,qCAAqC,GAAC,IAAI,CAACH,OAAO,GAAC,mDAAmD,CAAC;IAChI,MAAMiB,QAAO,GAAI,MAAMD,IAAI,CAACX,IAAI,EAAE;IAClC,IAAIa,SAAQ,GAAID,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACD,IAAG,IAAKA,IAAI,CAACE,GAAE,IAAK,UAAU,CAAC;IACpE,IAAIC,OAAM,GAAIL,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACD,IAAG,IAAKA,IAAI,CAACE,GAAE,IAAK,YAAY,CAAC;IACpE,KAAI,IAAIX,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIQ,SAAS,CAACN,MAAM,EAAEF,CAAC,EAAE,EAAC;MACrC,IAAGA,CAAA,IAAKQ,SAAS,CAACN,MAAM,GAAC,CAAC,EAAC;QACvB,IAAI,CAACrB,QAAO,IAAK2B,SAAS,CAACR,CAAC,CAAC,CAACjC,IAAG,GAAG,IAAI;MAC5C,OACI;QACA,IAAI,CAACc,QAAO,IAAK2B,SAAS,CAACR,CAAC,CAAC,CAACjC,IAAI;MACtC;IACJ;IACA,KAAI,IAAIiC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIY,OAAO,CAACV,MAAM,EAAEF,CAAC,EAAE,EAAC;MACnC,IAAGA,CAAA,IAAKY,OAAO,CAACV,MAAM,GAAC,CAAC,EAAC;QACrB,IAAI,CAACpB,MAAK,IAAK8B,OAAO,CAACZ,CAAC,CAAC,CAACjC,IAAG,GAAG,IAAI;MACxC,OACI;QACA,IAAI,CAACe,MAAK,IAAK8B,OAAO,CAACZ,CAAC,CAAC,CAACjC,IAAI;MAClC;IACJ;IACA,KAAI,IAAIiC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,CAAC,EAAEA,CAAC,EAAE,EAAC;MACtB,IAAGA,CAAA,IAAK,CAAC,EAAC;QACN,IAAI,CAACjB,IAAG,IAAKwB,QAAQ,CAACM,IAAI,CAACb,CAAC,CAAC,CAACjC,IAAG,GAAG,IAAI;MAC5C,OACI;QACA,IAAI,CAACgB,IAAG,IAAKwB,QAAQ,CAACM,IAAI,CAACb,CAAC,CAAC,CAACjC,IAAI;MACtC;IACJ;IAEA,MAAM+C,IAAG,GAAI,MAAMrB,KAAK,CAAC,qCAAqC,GAAC,IAAI,CAACH,OAAO,GAAC,kDAAkD,CAAC;IAC/H,MAAMyB,MAAK,GAAI,MAAMD,IAAI,CAACnB,IAAI,EAAE;IAChC,IAAI,CAACT,MAAK,GAAI,sCAAsC,GAAC6B,MAAM,CAACC,SAAS,CAAClD,WAAW,CAAC,IAAI,CAACG,EAAE,CAAC,CAACgD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS;IACjH,IAAI,CAAC/B,MAAK,GAAI,sCAAsC,GAAC4B,MAAM,CAACC,SAAS,CAAClD,WAAW,CAAC,IAAI,CAACG,EAAE,CAAC,CAACgD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS;IACjH,IAAI,CAAC9B,MAAK,GAAI,sCAAsC,GAAC2B,MAAM,CAACC,SAAS,CAAClD,WAAW,CAAC,IAAI,CAACG,EAAE,CAAC,CAACgD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS;IACjH,IAAI,CAAC7B,MAAK,GAAI,sCAAsC,GAAC0B,MAAM,CAACC,SAAS,CAAClD,WAAW,CAAC,IAAI,CAACG,EAAE,CAAC,CAACgD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS;EACnH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAACC,KAAK,EAAC;MACV,OAAOC,IAAI,CAACF,KAAK,CAACC,KAAI,GAAG,EAAE,IAAG,EAAE;IAClC,CAAC;IACDE,QAAQA,CAAA,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnC,OAAO,CAAC;MACzB,IAAI,CAACoC,KAAK,CAAC,UAAU,EAAE,IAAI,CAACpC,OAAO,CAAC;IACtC;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}