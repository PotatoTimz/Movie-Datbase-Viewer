{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport $ from 'jquery';\nexport default {\n  name: 'SearchPage',\n  inheritAttrs: false,\n  data() {\n    return {\n      optionalFields: false,\n      optionalFieldArrow: '▾',\n      yearOptions: ['Any'],\n      pages: [1, 2, 3, 4, 5],\n      numPages: 0,\n      numResults: 0,\n      genres: [],\n      results: [],\n      // Query parameters\n      query: '',\n      year: '',\n      page: '1'\n    };\n  },\n  async mounted() {\n    // Get genre list\n    fetch('https://api.themoviedb.org/3/genre/movie/list?' + 'api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US').then(resp => resp.json()).then(data => this.genres = Object.assign({}, ...data.genres.map(genre => ({\n      [genre.id]: genre.name\n    })))).catch(error => console.log(error));\n\n    // Generate year options\n    let year = new Date().getFullYear();\n    for (; year > 1878; year--) {\n      this.yearOptions.push(year);\n    }\n  },\n  methods: {\n    toggleOptionalFields() {\n      this.optionalFields = !this.optionalFields;\n      this.optionalFieldArrow = this.optionalFieldArrow === '▾' ? '▴' : '▾';\n    },\n    async submitQuery(newQuery) {\n      if (newQuery) this.page = '1';\n      $('#query').blur(); // Remove cursor focus from input\n\n      fetch('https://api.themoviedb.org/3/search/movie?' + 'api_key=b9dfda1d995db256a3b3ae948d044866' + `&query=${this.query}&year=${this.year}&page=${this.page}`).then(resp => resp.json()).then(data => this.displayResults(data)).then(() => this.updateSelectedPage()).catch(error => console.log(error));\n    },\n    displayResults(data) {\n      this.numPages = data.total_pages;\n      this.numResults = data.total_results;\n      this.pages[4] = this.numPages;\n      this.results = [];\n      for (let result of data.results) {\n        let resultData = {\n          id: result.id,\n          title: result.title,\n          overview: result.overview,\n          info: ''\n        };\n        if (result.poster_path !== null) resultData.poster = 'https://image.tmdb.org/t/p/original/' + result.poster_path;\n\n        // Year and genre(s)\n        if (result.release_date !== undefined) resultData.info = result.release_date.slice(0, 4);\n        if (result.genre_ids.length > 0) {\n          if (resultData.info !== '') resultData.info += '\\u2003|\\u2003';\n          resultData.info += this.genres[result.genre_ids[0]];\n          for (let i = 1; i < result.genre_ids.length; i++) resultData.info += ', ' + this.genres[result.genre_ids[i]];\n        }\n        this.results.push(resultData);\n      }\n    },\n    // Loads a new page of search results\n    loadPage(newPage) {\n      if (newPage === this.page) return;\n      if (newPage < 4) this.pages = [1, 2, 3, 4, this.numPages];else if (newPage > this.numPages - 3) this.pages = [1, this.numPages - 3, this.numPages - 2, this.numPages - 1, this.numPages];else this.pages = [1, newPage - 1, newPage, Number(newPage) + 1, this.numPages];\n      this.page = newPage;\n      this.submitQuery(false);\n      window.scrollTo(0, 0);\n    },\n    // Updates the selected cell in the page selector table\n    updateSelectedPage() {\n      $('.selected-page').removeClass('selected-page').addClass('is-clickable');\n      let cells = $('#page-selector').children();\n      for (let i = 0; i < cells.length; i++) {\n        let cell = $(cells[i]);\n        if (parseInt(cell.html()) == this.page) {\n          cell.removeClass('is-clickable').addClass('selected-page');\n          break;\n        }\n      }\n    },\n    moreInfo(movieID) {\n      this.$emit('selected', movieID);\n    }\n  }\n};","map":{"version":3,"names":["$","name","inheritAttrs","data","optionalFields","optionalFieldArrow","yearOptions","pages","numPages","numResults","genres","results","query","year","page","mounted","fetch","then","resp","json","Object","assign","map","genre","id","catch","error","console","log","Date","getFullYear","push","methods","toggleOptionalFields","submitQuery","newQuery","blur","displayResults","updateSelectedPage","total_pages","total_results","result","resultData","title","overview","info","poster_path","poster","release_date","undefined","slice","genre_ids","length","i","loadPage","newPage","Number","window","scrollTo","removeClass","addClass","cells","children","cell","parseInt","html","moreInfo","movieID","$emit"],"sources":["C:\\Users\\User\\Desktop\\WebDevelopmentGroupProject-master\\src\\components\\Search.vue"],"sourcesContent":["<template>\n  <section class=\"hero is-dark\">\n    <div id=\"query-entry\">\n      <h1>Search for a Movie</h1>\n      <div class=\"field\">\n        <div class=\"control\">\n          <input id=\"query\" class=\"input\" type=\"text\" v-model=\"query\" v-on:keyup.enter=\"submitQuery(true)\" placeholder=\"Movie title\">\n        </div>\n      </div>\n\n      <!-- Optional fields -->\n      <p class=\"is-clickable is-unselectable\" v-on:click=\"toggleOptionalFields\">\n        Advanced search options {{ optionalFieldArrow }}\n      </p>\n      <div id=\"optional-fields\" v-if=\"optionalFields\">\n        <div class=\"field is-horizontal\">\n          <div class=\"field-label is-normal\">\n            <label class=\"label has-text-white\">Year:</label>\n          </div>\n          <div class=\"field-body\">\n            <div class=\"select\">\n              <select v-model=\"year\">\n                <option v-for=\"year in yearOptions\" v-bind:key=\"year\">{{ year }}</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Search button -->\n      <div class=\"field\">\n        <button id=\"search-button\" class=\"button\" v-on:click=\"submitQuery(true)\">Search</button>\n      </div>\n    </div>\n  </section>\n\n  <!-- Search results -->\n  <div id=\"search-results\" v-if=\"results.length > 0\">\n    <h2>Results ({{ 20*(page-1)+1 }}-{{ Math.min(20*page, numResults) }} of {{ numResults }}):</h2>\n    <div class=\"movie-result columns is-clickable\" v-for=\"movie in results\" v-bind:key=\"movie\" v-on:click=\"moreInfo(movie.id)\">\n      <img v-bind:src=\"movie.poster\">\n      <div id=\"result-info\">\n        <p><strong>{{ movie.title }}</strong></p>\n        <p>{{ movie.info }}</p>\n        <br>\n        <p>{{ movie.overview }}</p>\n      </div>\n    </div>\n\n    <!-- Page selector -->\n    <table id=\"page-selector\" class=\"table\">\n      <td v-if=\"numPages > 0\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[0] }}</td>\n      <td v-if=\"page > 3\" class=\"is-unselectable\">...</td>\n      <td v-if=\"numPages > 1\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[1] }}</td>\n      <td v-if=\"numPages > 2\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[2] }}</td>\n      <td v-if=\"numPages > 3\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[3] }}</td>\n      <td v-if=\"page < numPages-2\" class=\"is-unselectable\">...</td>\n      <td v-if=\"numPages > 4\" class=\"is-clickable is-unselectable\" v-on:click=\"loadPage($event.target.innerHTML)\">{{ pages[4] }}</td>\n    </table>\n  </div>\n</template>\n\n\n\n\n<script>\n  import $ from 'jquery';\n\n  export default {\n    name: 'SearchPage',\n    inheritAttrs: false,\n\n    data() {\n      return {\n        optionalFields: false,\n        optionalFieldArrow: '▾',\n        yearOptions: ['Any'],\n        pages: [1, 2, 3, 4, 5],\n        numPages: 0,\n        numResults: 0,\n        genres: [],\n        results: [],\n\n        // Query parameters\n        query: '',\n        year: '',\n        page: '1'\n      }\n    },\n\n\n    async mounted() {\n\n      // Get genre list\n      fetch('https://api.themoviedb.org/3/genre/movie/list?' +\n            'api_key=b9dfda1d995db256a3b3ae948d044866&language=en-US')\n        . then((resp)  => resp.json())\n        . then((data)  => this.genres = Object.assign({}, ...(data.genres.map(genre => ({[genre.id]: genre.name})))))\n        .catch((error) => console.log(error)\n      );\n\n      // Generate year options\n      let year = new Date().getFullYear();\n      for(; year>1878; year--) {\n        this.yearOptions.push(year);\n      }\n    },\n\n\n    methods: {\n      toggleOptionalFields() {\n        this.optionalFields = !this.optionalFields;\n        this.optionalFieldArrow = (this.optionalFieldArrow === '▾')?  '▴' : '▾';\n      },\n\n      \n      async submitQuery(newQuery) {\n        if(newQuery) this.page = '1';\n        $('#query').blur();           // Remove cursor focus from input\n\n        fetch('https://api.themoviedb.org/3/search/movie?' +\n              'api_key=b9dfda1d995db256a3b3ae948d044866' +\n              `&query=${this.query}&year=${this.year}&page=${this.page}`)\n          .then ((resp)  => resp.json())\n          .then ((data)  => this.displayResults(data))\n          .then (()      => this.updateSelectedPage())\n          .catch((error) => console.log(error)\n        );\n      },\n\n\n      displayResults(data) {\n        this.numPages   = data.total_pages;\n        this.numResults = data.total_results;\n        this.pages[4]   = this.numPages;\n        this.results    = [];\n\n        for(let result of data.results) {\n          let resultData = {\n            id:       result.id,\n            title:    result.title,\n            overview: result.overview,\n            info:     ''\n          };\n\n          if(result.poster_path !== null)\n            resultData.poster = 'https://image.tmdb.org/t/p/original/' + result.poster_path;\n\n          // Year and genre(s)\n          if(result.release_date !== undefined)\n            resultData.info = result.release_date.slice(0, 4);\n\n          if(result.genre_ids.length > 0) {\n            if(resultData.info !== '')\n              resultData.info += '\\u2003|\\u2003';\n\n            resultData.info += this.genres[result.genre_ids[0]];\n            for(let i=1; i<result.genre_ids.length; i++)\n              resultData.info += ', ' + this.genres[result.genre_ids[i]];\n          }\n\n          this.results.push(resultData);\n        }\n      },\n\n\n      // Loads a new page of search results\n      loadPage(newPage) {\n        if(newPage === this.page)\n          return;\n\n        if(newPage < 4)\n          this.pages = [1, 2, 3, 4, this.numPages];\n        else if(newPage > this.numPages-3)\n          this.pages = [1, this.numPages-3, this.numPages-2, this.numPages-1, this.numPages]\n        else\n          this.pages = [1, newPage-1, newPage, Number(newPage)+1, this.numPages];\n\n        this.page = newPage;\n        this.submitQuery(false);\n        window.scrollTo(0, 0);\n      },\n\n\n      // Updates the selected cell in the page selector table\n      updateSelectedPage() {\n        $('.selected-page').removeClass('selected-page').addClass('is-clickable');\n\n        let cells = $('#page-selector').children();\n        for(let i=0; i<cells.length; i++) {\n          let cell = $(cells[i]);\n          if(parseInt(cell.html()) == this.page) {\n            cell.removeClass('is-clickable').addClass('selected-page');\n            break;\n          }\n        }\n      },\n\n\n      moreInfo(movieID) {\n        this.$emit('selected', movieID);\n      }\n    }\n  }\n</script>\n\n\n\n\n<style>\n  h1 {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  #query-entry {\n    margin: 4rem;\n  }\n\n  #optional-fields {\n    margin: 1rem;\n    width: 1000px;\n  }\n\n  #search-button {\n    margin-top: 1rem;\n  }\n\n  #search-results {\n    width: 50%;\n    min-width: 50rem;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 2rem;\n  }\n\n  .movie-result {\n    height: 12rem;\n    width: 100%;\n    margin: 1rem;\n    border: 1px solid black;\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n  \n  .movie-result:hover {\n    border: 1px solid rgb(175, 175, 175);\n  }\n\n  #result-info {\n    margin: 1rem;\n    overflow: hidden;\n  }\n\n  #result-info strong {\n    font-size: 1.5rem;\n  }\n\n  #page-selector {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .selected-page {\n    font-weight: bold;\n  }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}